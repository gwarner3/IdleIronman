@using System.Diagnostics.Eventing.Reader
@model IdleIronman.ViewModels.ActivityLogViewModel
@{
    ViewBag.Title = "LogActivity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Log Activity</h2>

@using (Html.BeginForm("LogActivity", "Participant", new {activityLogVm = @Model}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Log Activity</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ActivityLog.ActivityDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*May add type = "date" to render the date picker*@

                @if (Model.ActivityLog == null)
                {
                    @Html.EditorFor(model => model.ActivityLog.ActivityDate, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    var query = Model.ActivityLog.ActivityDate.ToShortTimeString();
                    @Html.EditorFor(model => Model.ActivityLog.ActivityDate, new { htmlAttributes = new { @class = "form-control" } })
                }
                @Html.ValidationMessageFor(model => model.ActivityLog.ActivityDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityLog.ExerciseTypeModelsId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ActivityLog.ExerciseTypeModelsId, new SelectList(Model.ExerciseType, "Id", "Name"), "Select Exercise", new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.ActivityLog.ActivityDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityLog.Distance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivityLog.Distance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityLog.Distance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityLog.DurationInMinutes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivityLog.DurationInMinutes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityLog.DurationInMinutes, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.ActivityLog.Id)
        <button type="submit" class="btn btn-primary">Save</button>


    </div>
}
